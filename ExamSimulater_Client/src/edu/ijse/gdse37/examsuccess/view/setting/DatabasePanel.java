/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.gdse37.examsuccess.view.setting;

import edu.ijse.gdse37.examsuccess.connecter.ServerConnecter;
import edu.ijse.gdse37.examsuccess.controller.AdminController;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Ashan Tharuka
 */
public class DatabasePanel extends javax.swing.JPanel {

    private String id;

    /**
     * Creates new form EmailPanel
     */
    public DatabasePanel(String id) {
        initComponents();
        setSize(610, 290);
        ePanel.setVisible(false);
        this.id = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emailPanel = new javax.swing.JPanel();
        emailLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        oldPasswordText = new javax.swing.JPasswordField();
        ePanel = new javax.swing.JPanel();
        restoreButton = new javax.swing.JLabel();
        backUpButton = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        emailPanel.setBackground(new java.awt.Color(255, 255, 255));
        emailPanel.setLayout(null);

        emailLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailLabel.setText("Admin Password");
        emailPanel.add(emailLabel);
        emailLabel.setBounds(50, 50, 130, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/examsuccess/view/photos/linePhoto.png"))); // NOI18N
        emailPanel.add(jLabel2);
        jLabel2.setBounds(20, 20, 30, 250);

        oldPasswordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldPasswordTextActionPerformed(evt);
            }
        });
        emailPanel.add(oldPasswordText);
        oldPasswordText.setBounds(180, 50, 170, 30);

        ePanel.setBackground(new java.awt.Color(255, 255, 255));
        ePanel.setLayout(null);

        restoreButton.setBackground(new java.awt.Color(171, 227, 247));
        restoreButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        restoreButton.setForeground(new java.awt.Color(255, 255, 255));
        restoreButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        restoreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/examsuccess/view/photos/blackButton.png"))); // NOI18N
        restoreButton.setText("<html>Restore <br>");
        restoreButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        restoreButton.setMinimumSize(new java.awt.Dimension(110, 50));
        restoreButton.setPreferredSize(new java.awt.Dimension(110, 50));
        restoreButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                restoreButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                restoreButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                restoreButtonMouseExited(evt);
            }
        });
        ePanel.add(restoreButton);
        restoreButton.setBounds(100, 120, 150, 50);

        backUpButton.setBackground(new java.awt.Color(171, 227, 247));
        backUpButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        backUpButton.setForeground(new java.awt.Color(255, 255, 255));
        backUpButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/examsuccess/view/photos/blackButton.png"))); // NOI18N
        backUpButton.setText("<html>BackUp <br>");
        backUpButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        backUpButton.setMinimumSize(new java.awt.Dimension(110, 50));
        backUpButton.setPreferredSize(new java.awt.Dimension(110, 50));
        backUpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backUpButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backUpButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backUpButtonMouseExited(evt);
            }
        });
        ePanel.add(backUpButton);
        backUpButton.setBounds(100, 20, 150, 50);

        emailPanel.add(ePanel);
        ePanel.setBounds(30, 30, 340, 190);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/gdse37/examsuccess/view/photos/databasepic.png"))); // NOI18N
        emailPanel.add(jLabel1);
        jLabel1.setBounds(380, 40, 200, 200);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(emailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void restoreButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restoreButtonMouseClicked
        try {
            File srcFolder = null;

            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("choosertitle");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
                System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
                srcFolder = chooser.getSelectedFile();
            } else {
                System.out.println("No Selection ");
            }

            // File srcFolder = new File("../ExamSimulater_Server/Database");
            File destFolder = new File("../ExamSimulater_Server/Database");
            if (!srcFolder.exists()) {
                System.out.println("1");
                System.out.println("Directory does not exist.");
                //just exit
                System.exit(0);

            } else {

                try {
                    copyFolder(srcFolder, destFolder);
                } catch (IOException e) {
                    e.printStackTrace();
                    //error, just exit
                    System.exit(0);
                }
            }

        } catch (NullPointerException ex) {
        }
    }//GEN-LAST:event_restoreButtonMouseClicked

    private void restoreButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restoreButtonMouseEntered
       restoreButton.setForeground(new Color(204,255,255));
    }//GEN-LAST:event_restoreButtonMouseEntered

    private void restoreButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_restoreButtonMouseExited
      restoreButton.setForeground(Color.WHITE);
    }//GEN-LAST:event_restoreButtonMouseExited

    private void backUpButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backUpButtonMouseClicked
      try{
        String path = null;

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setSelectedFile(new File("System Database"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            path = fileChooser.getSelectedFile().getPath();
            System.out.println("Save as file: " + path);
            File f1 = new File(path);
            f1.mkdirs();
        }

        File srcFolder = new File("../ExamSimulater_Server/Database");
        File destFolder = new File(path);
        if (!srcFolder.exists()) {
            System.out.println("1");
            System.out.println("Directory does not exist.");
            //just exit
            System.exit(0);

        } else {

            try {
                copyFolder(srcFolder, destFolder);
            } catch (IOException e) {
                e.printStackTrace();
                //error, just exit
                System.exit(0);
            }
        }

        System.out.println("Done");
        
      }catch(NullPointerException ex){}
    }//GEN-LAST:event_backUpButtonMouseClicked

    private void backUpButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backUpButtonMouseEntered
          backUpButton.setForeground(new Color(204,255,255));
    }//GEN-LAST:event_backUpButtonMouseEntered

    private void backUpButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backUpButtonMouseExited
        backUpButton.setForeground(Color.WHITE);        // TODO add your handling code here:
    }//GEN-LAST:event_backUpButtonMouseExited

    private void oldPasswordTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldPasswordTextActionPerformed
        String oldPass = String.valueOf(oldPasswordText.getPassword());

        try {
            AdminController ac = ServerConnecter.getServerConnecter().getAdminController();
            boolean isTrue = ac.checkPassword(id, oldPass);

            if (isTrue) {
                oldPasswordText.setText(null);
                emailLabel.setVisible(false);
                oldPasswordText.setVisible(false);
                ePanel.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Wrong Password", "Warning", 2);
                oldPasswordText.setText(null);
            }
        } catch (NotBoundException | MalformedURLException | RemoteException ex) {
            Logger.getLogger(DatabasePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DatabasePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_oldPasswordTextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backUpButton;
    private javax.swing.JPanel ePanel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JPanel emailPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField oldPasswordText;
    private javax.swing.JLabel restoreButton;
    // End of variables declaration//GEN-END:variables
 public static void copyFolder(File src, File dest)
            throws IOException {
        if (src.isDirectory()) {

            //if directory not exists, create it
            if (!dest.exists()) {
                dest.mkdirs();
                System.out.println("Directory copied from "
                        + src + "  to " + dest);
            }

            //list all the directory contents
            String files[] = src.list();

            for (String file : files) {
                //construct the src and dest file structure
                File srcFile = new File(src, file);
                File destFile = new File(dest, file);
                //recursive copy
                copyFolder(srcFile, destFile);
            }

        } else {
            //if file, then copy it
            //Use bytes stream to support all file types
            InputStream in = new FileInputStream(src);
            OutputStream out = new FileOutputStream(dest);

            byte[] buffer = new byte[1024];

            int length;
            //copy the file content in bytes
            while ((length = in.read(buffer)) > 0) {
                out.write(buffer, 0, length);
            }

            in.close();
            out.close();
            System.out.println("File copied from " + src + " to " + dest);
        }
    }

}
